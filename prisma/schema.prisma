// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(ulid())
  name      String
  bio       String?
  email     String   @unique
  password  String
  photoUrl  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  images    Image[]
  likes     Like[]

  @@map("users")
}

model Image {
  id          String   @id @default(ulid())
  title       String
  blurUrl     String
  previewUrl  String
  downloadUrl String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
  userId      String?

  user  User?  @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: SetNull)
  likes Like[]

  @@map("images")
}

model Like {
  id        String   @id @default(ulid())
  userId    String
  imageId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  user  User  @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  image Image @relation(fields: [imageId], references: [id], onUpdate: Cascade, onDelete: Cascade)

  @@map("likes")
}
